name: Build Multi-Architecture Docker Images

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Version tag (e.g., latest, 1.1.7)'
        required: true
        default: 'latest'
  push:
    tags:
      - 'v*'

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from git ref
        id: extract_version
        if: github.ref_type == 'tag'
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Set tag for Docker image
        id: set_tag
        run: |
          # Convert repository name to lowercase for Docker compatibility
          REPO=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO=${REPO}" >> $GITHUB_ENV
          
          if [ "${{ github.event_name }}" == "push" ]; then
            echo "TAG=${VERSION}" >> $GITHUB_ENV
          else
            echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ env.REPO }}:${{ env.TAG }}
            ${{ (github.event.inputs.tag == 'latest' || env.TAG == 'latest') && format('ghcr.io/{0}:latest', env.REPO) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max